更新文件内容的步骤
1.vim 文件  #vim编辑更新文件内容或是echo追加重定向文件内容
2.git diff 更新的文件  #对比更新的文件和仓库的区别
3.git restore 更新的文件 #撤销更新的文件(如果要还原到更新前的文件，又不记得更新过什么内容了，可用此操作恢复)
4.git add 更新的文件      #添加所有文件到暂存区
5.git reset HEAD xxx  #撤销标记的文件，xxx是add的文件
6.git status   #查看状态
7.git branch #查看当前所在分支
8.git commit -m "update file" #提交暂存区中的内容到本地仓库，update file是备注
9.git push origin 分支名#推送代码到远程仓库，origin是远程仓库别名，推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上
例子：
git push origin main  #推送main本地分支的所有提交到远程仓库别名origin对应的远程分支上
git push origin dev   #推送dev本地分支的所有提交到远程仓库别名origin对应的远程分支上

删除文件的步骤
1.git rm 文件1 文件2 #可以批量rm掉
2.git commit -m "xxxx" #提交，xxxx是备注
3.git push #推送到远程仓库

合并分支到主分支的步骤
1.git checkout main     #先切换到主分支
2.git merge test     #然后合并分支到主分支，test是要合并到主分支的分支
3.git push #最后推送到远程仓库

修改分支名称的步骤
1.git chechout -b xxx  #新建的同时切换到该分支
2.git branch #查看本地分支
3.git branch -r #查看远程分支
4.git branch -a #查看本地和远程分支
5.git branch -m xxx aaa #修改本地分支xxx为aaa
6.git push -u origin aaa #推送修改的分支aaa到远程仓库,并将上游分支设置为aaa
7.git push origin -d xxx #删除远程的分支xxx
8.git branch -d aaa #删除本地的分支aaa
9.git push --set-upstream origin aaa #本地分支关联远程分支
版本的回滚
1.git reflog或是git log #查看历史版本
2.git reset --hard 版本号 #版本的回归

创建分支
1.git branch 分支名  #相当于对主线分支的复制

合并分支
git merge 需要合并的分支名  #把指定的分支合并到当前分支上

创建git的新仓库test
git init #初始化本地仓库
touch README.md #创建文件
git add README.md #添加到暂存区
git commit -m "first commit" #提交到本地仓库
git branch -M main #修改当前分支为main
git remote add origin https://github.com/Gzhichao/test.git #添加远程仓库
git push -u origin main #关联远程仓库
存在的仓库test1
git remote add origin https://github.com/Gzhichao/test1.git
git branch -M main
git push -u origin main

修改远程库
1.git remote -v #查看远程仓库信息
2.git remote remove origin #删除关联的origin
3.git remote add origin https://github.com/Gzhichao/LearningMaterials.git（新的远程库) #添加新的远程仓库，origin是远程仓库别名，https://github.com/Gzhichao/LearningMaterials.git是远程仓库地址
4.git branch #查看当前分支
5.git push -u origin 当前分支名称 #推送新的分支到远程仓库关联，origin是远程仓库别名
或是
1.git remote -v #查看远程仓库信息
2.git remote set-url origin https://github.com/Gzhichao/LearningMaterials.git (新的远程库) #设置新的远程库
3.git branch #查看当前分支
4.git push -u origin 当前分支名称  #推送新的分支到远程仓库关联
设置push.default的值
git config --global push.default simple   #matching模式会推送所有本地分支到远程仓库，simple或nothing模式只推送当前分支
git config --list  查看git设置的config

添加token远程仓库链接，方便每次推送需要输入token
git remote set-url origin https://<your_token>@github.com/Gzhichao/LearningMaterials.git #<your_token>换成token,Gzhichao是github的用户名,LearningMaterials是仓库名称

远程分支操作
git push -u origin 分支名:分支名  #origin是远程仓库别名

远程仓库非空，本地库也有内容，如何同步本地库和远程仓库
方法一：
1.先clone远程仓库到本地
2.然后更新本地的代码
3.最后push推送到远程仓库
方法二:
git pull --allow-unrelated-histories 远程仓库别名  远程仓库分支
git add .
git push -u 远程仓库别名   分支名

小结
      1、查看远程库信息，使用 git remote -v;
      2、本地新建的分支如果不推送到远程，对其他人是不可见的;
      3、在本地创建和远程分支对应的分支， 使用git checkout -b branch-name,本地和远程分支的名称最好一样
      4、建立本地分支和远程分支的关联，使用git branch –set-upstream-to=origin/dev dev
      5、从本地推送分支，使用git push origin branch-name，如果推送失败，用git  pull抓取远程的新提交
      6、从远程抓取分支，使用git pull，如果有冲突，要先处理冲突
